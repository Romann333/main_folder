# Установка модулей в среду окружения
pip3 install pytelegrambotapi
pip3 install pytelegrambotapi --upgrade    # не устанавливать telebot #

# Импорт модулей
import telebot
from telebot import types  

# Созднание бота с токеном
bot = telebot.Telebot(token)    # Получаем  токен из телеграмма, придумываем ему имя


#Принимает любой текст, после писать функцию для реакции
@bot.massage_handler(content_type=('text'))            
def get_text(message):                                 # Агруменом всегда писать message
    bot.send_message(message.chat.id, 'Текст или функция, результат парсинга)   # Если отправить message.text, то вернется тоже сообщение, которое и отпправил
        .reply_to


#добавление встроенных кнопок к панели!!!
@bot.message_handler(commands=['button']) # Команды пишутся через /start... Атрибутом может быть функция, которая обрабатывает входящие сообщения                                            Нужно помнить что msg возвращает много полезной инфы, обращатся к ней через точку message.chat.id...
def button(message):
    markup = types.InlineKeyboardMarkup(row_width=2)   /   markup = types.ReplyKeyboardMarkup(resize_keyboard=True)  # подгоняет размер кнопок
    item = types.InlineKeyboardButton('Как дела?', callback_data='question_1') / item = types.KeyboardButton('Как дела?', callback_data='question_1')
    item2 = types.InlineKeyboardButton('Пока', callback_data='goodbye')
    markup.add(item, item2)   #добавление кнопок к панели!!!
    bot.send_message(message.chat.id, 'Привет!', reply_markup=markup)  # Бот отвечает текст и следом выводит подготовленные кнопки
    bot.send_message(message.chat.id,  'Привет!, {0.first_name}!'.format(message.from_user), reply_markup=markup)


# Создание меню из кнопок после ввода стартовой команды старт
@bot.message_handler(commands=['start'])
def button(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item = types.KeyboardButton('Как дела?', callback_data='question_1') # Создание кнопки, можно без колл бэка
    ...
    markup.add(item, item2)   #добавление кнопок к панели!!! Можно добавлять и кнопку 'back'
    bot.send_message(message.chat.id,  'Привет!, {0.first_name}!'.format(message.from_user), reply_markup=markup) # Кнопки появятся только после этого сообщения


# Декоратор для возврата действия после нажатия конкретной кнопки.
@bot.callback_query_handler(func=lambda call:True)     
def callback(call):
    if call.message:
        if call.data == 'question_1':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text= 'Дела отлично!')   # Полностью обрновляется поле вывода сообщений
        elif call.data == 'goodbye':
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text= 'Пока друг')                                                                                                                      


# Обработка нажатия кнопки
@bot.massage_handler(content_type=('text')) 
def get_text(message):
    if message.chat.type == 'privat':
        if message.text == 'Текст кнопки':
            выполняем какое то действие... и так добавление
        elif:


# Постоянное ожидание сообщения с циклом тру.
while True:
    try:
        bot.polling(none_stop=True, interval=0)
    except Exception:
        time.sleep(15
        )

# Ведение журнала ?!
import logging
logger = telebot.logger
telebot.logger.setLevel(logging.DEBUG)